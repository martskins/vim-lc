set nocompatible
filetype off

call plug#begin()
Plug '~/dev/vim-lc'
call plug#end()

filetype plugin indent on

set shiftwidth=4
syntax on
set expandtab
set number relativenumber
set signcolumn=yes
set hlsearch

set completeopt=noinsert,menuone,noselect

let g:vlc#log#level = 'error'
let g:vlc#servers = {
      \ 'go': {
      \   'name': 'gopls',
      \   'command': 'gopls',
      \   'initializationOptions': {
      \     'codelens': { 'test': v:true, 'gc_details': v:true },
      \   },
      \  },
      \ 'rust': {
      \    'name': 'rust-analyzer',
      \    'command': 'rust-analyzer',
      \    'initializationOptions': {
      \      "diagnostics": {
      \        "disabled": ["macro-error"]
      \      },
      \      "procMacro": {
      \        "enable": v:true
      \      },
      \      "cargo": {
      \        "loadOutDirsFromCheck": v:true
      \      }
      \    }
      \  },
      \ }

nmap <silent>gd <Plug>(vlc-definition)
nmap <silent>gi <Plug>(vlc-implementation)
nmap <silent>gr <Plug>(vlc-references)
nmap <silent>ga <Plug>(vlc-code-action)
nmap <silent>gl <Plug>(vlc-code-lens)
nmap <silent>R  <Plug>(vlc-rename)
nmap <silent>K  <Plug>(vlc-hover)
nmap <silent>F  <Plug>(vlc-formatting)
nmap <silent>E  <Plug>(vlc-diagnostic-detail)

nmap <Left> :cprev<CR>
nmap <Right> :cnext<CR>

function! ProfileStart()
  :profile start profile.log
  :profile func *
  :profile file *
endfunction

function! ProfileStop()
  :profile stop
endfunction

command! ProfileStart :call ProfileStart()
